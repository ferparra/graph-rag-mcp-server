[tool:pytest]
# Pytest configuration for Graph RAG MCP Server

# Test discovery
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Minimum version
minversion = 7.0

# Add options
addopts = 
    --strict-markers
    --strict-config
    --verbose
    --tb=short
    --cov=src
    --cov-report=term-missing
    --cov-report=html:tests/coverage_html
    --cov-report=xml:tests/coverage.xml
    --cov-fail-under=80

# Test markers
markers =
    unit: Unit tests (no external dependencies)
    integration: Integration tests (with dependencies)
    e2e: End-to-end tests
    eval: Evaluation tests
    slow: Slow running tests
    requires_chroma: Tests that require ChromaDB
    requires_gemini: Tests that require Gemini API key
    requires_vault: Tests that require test vault content

# Filterwarnings
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::UserWarning:chromadb.*
    ignore::UserWarning:sentence_transformers.*

# Test timeout (seconds)
timeout = 300

# Asyncio mode
asyncio_mode = auto

# Log configuration
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Coverage configuration
[coverage:run]
source = src
omit = 
    */tests/*
    */venv/*
    */virtualenv/*
    */.tox/*
    */site-packages/*
    */scripts/*

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod