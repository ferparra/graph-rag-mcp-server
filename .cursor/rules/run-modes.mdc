---
alwaysApply: true
---
## Run Modes & Commands

- **Stdio mode (Claude Desktop)**
  - Script: `graph-rag-mcp-stdio` → [src/entry_points.py](mdc:src/entry_points.py) → `run_stdio()` → [src/mcp_server.py](mdc:src/mcp_server.py): `run_stdio()`
  - Logging uses stderr; stdout is reserved for MCP JSON-RPC.
  - Example:
    ```bash
    uvx --python 3.13 --from . graph-rag-mcp-stdio
    ```

- **HTTP mode (Cursor/Raycast/any HTTP client)**
  - Script: `graph-rag-mcp-http` → `run_http()` (uvicorn app: `src.mcp_server:mcp.get_app`)
  - Defaults: host `localhost`, port `8765` (from [src/config.py](mdc:src/config.py)).
  - Example:
    ```bash
    uv run graph-rag-mcp-http
    ```
  - Note: The console script does not parse CLI flags; prefer configuration via code/env.

- **Legacy entry points (stdio)**
  - ```bash
    uv run main.py
    uv run src/mcp_server.py
    ```

- **Indexing & maintenance** (see [README.md](mdc:README.md))
  - ```bash
    # Full reindex / partial
    uv run scripts/reindex.py all
    uv run scripts/reindex.py chroma
    uv run scripts/reindex.py unified

    # Watcher
    uv run scripts/reindex_watch.py start
    uv run scripts/reindex_watch.py test
    ```

- **Python requirement**: 3.13+. Prefer `uv`/`uvx` for deterministic runs.
