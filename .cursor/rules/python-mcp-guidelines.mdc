---
globs: *.py
description: Python + MCP coding guidelines for this repo
---
## Python & MCP Coding Guidelines

- **Stdio discipline**: Never write to stdout in stdio mode. Configure logging to stderr.
  - See [src/mcp_server.py](mdc:src/mcp_server.py) and [src/main.py](mdc:src/main.py)
- **FastMCP tools**: Decorate tools with `@mcp.tool()` and use Pydantic models for structured I/O.
- **Typing**: Prefer explicit types on public APIs; avoid `Any` when possible.
- **Error handling**: Early returns, avoid deep nesting, and meaningful exceptions. Donâ€™t swallow errors silently.
- **Frontmatter I/O**: Use `python-frontmatter` for reading/writing; keep a single consolidated YAML block.
- **Indexing side-effects**: After mutating files, update the unified Chroma store (upsert/delete).
- **Imports**: Lazy/dynamic import large/optional modules in hot paths (e.g., enrichment).
- **Chunking**: Respect configuration in [src/config.py](mdc:src/config.py) including semantic vs character strategy.
- **Unified store ops**: Use [src/unified_store.py](mdc:src/unified_store.py) for vector search, graph metadata (neighbors, subgraphs, backlinks, tags), and note upsert/delete.
